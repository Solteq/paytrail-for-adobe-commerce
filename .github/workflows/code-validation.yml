name: Run code validation checks
on:
  workflow_call:
    inputs:
      fetch-depth:
        type: number
        required: false
        default: 2
        description: "Number of code revisions to check out (\"0\" for all)"
      base-branch:
        type: string
        required: false
        default: master
        description: "Base Git branch (i.e. \"develop\" or \"main\")"
      php-version:
        type: string
        required: false
        default: 8.1
        description: "Version of PHP to use for running PHP checks"
      node-version:
        type: string
        required: false
        default: 16
        description: "Version of Node.js to use"

  pull_request:
    types:
      - opened

  push:
    branches:
      - master
      - SQMAGOPC-447-validation-setup

jobs:
  changed-files:
    runs-on: ubuntu-latest

    name: Gather Changelist

    outputs:
      all: ${{ steps.changes.outputs.all}}
      php: ${{ steps.changes.outputs.php }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}

      - name: Get changed files
        id: changes
        run: |
          BASE_SHA="${{ github.event.before }}"
          if [ "$BASE_SHA" = "0000000000000000000000000000000000000000" ]; then
            BASE_SHA="${{ inputs.base-branch }}"
          fi
          if [[ ! -z "${{ github.event.pull_request.base.sha }}" ]]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          fi
          echo "all=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA ${{ github.sha }} | xargs)" >> $GITHUB_OUTPUT
          echo "php=$(git diff --name-only --diff-filter=ACMRT $BASE_SHA ${{ github.sha }} | grep -E '.ph(p|tml)$' | xargs)" >> $GITHUB_OUTPUT

  validate-php:
    runs-on: ubuntu-latest

    name: Run php code validation

    needs: changed-files

    if: ${{needs.changed-files.outputs.php}}

    strategy:
      matrix:
        dependencies:
          - "highest"
        composer-options:
          - "--no-plugins"
          - "--no-progress"
    steps:
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Php
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ inputs.php-version }}
          ini-file: development
          tools: composer:2.2, cs2pr
        env:
          COMPOSER_AUTH_JSON: |
            {
              "http-basic": {
                "repo.magento.com": {
                  "username": "${{ secrets.REPO_MAGENTO_USER }}",
                  "password": "${{ secrets.REPO_MAGENTO_PASSWORD }}"
                }
              }
            }

      - name: Validate Composer Files
        run: composer validate

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Run Composer install
        uses: "ramsey/composer-install@v1"
        with:
          dependency-versions: "${{ matrix.dependencies }}"
          composer-options: "${{ matrix.composer-options }}"

      - name: Configure coding standard
        run: vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/

      - name: Detect PHP coding standard violations
        run: vendor/bin/phpcs -q --report=checkstyle ${{needs.changed-files.outputs.php}} | cs2pr --graceful-warnings